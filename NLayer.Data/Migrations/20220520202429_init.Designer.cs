// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220520202429_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 5, 20, 23, 24, 29, 101, DateTimeKind.Local).AddTicks(8618),
                            Grade = 90,
                            Name = "Çevre Teknolojileri",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 5, 20, 23, 24, 29, 101, DateTimeKind.Local).AddTicks(8632),
                            Grade = 100,
                            Name = "Yapay Zeka",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 5, 20, 23, 24, 29, 101, DateTimeKind.Local).AddTicks(8633),
                            Grade = 85,
                            Name = "Enerji Verimliliği",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 5, 20, 23, 24, 29, 101, DateTimeKind.Local).AddTicks(8636),
                            Grade = 100,
                            Name = "Serbest Kanat İHA",
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("NLayer.Core.ProjectFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("ProjectFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Daha yaşanılabilir bir dünya için insanları bilinçlendirme çalışması yapmak",
                            LessonName = "Coğrafya",
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Yapay zekayı tüm dünyaya yaymak için çalışmalar yapmak.",
                            LessonName = "Machine Learning",
                            ProjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Enerji kaynaklarımızın kullanımına yönelik çalışmalar yapmak.",
                            LessonName = "Coğrafya",
                            ProjectId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Kendi ihamızı kendimiz tasarlayalım konulu çalışma yapma.",
                            LessonName = "Elektrik",
                            ProjectId = 4
                        });
                });

            modelBuilder.Entity("NLayer.Core.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yasemin",
                            Surname = "KOÇ"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yasin",
                            Surname = "SELEK"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Betül",
                            Surname = "YILMAZ"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Project", b =>
                {
                    b.HasOne("NLayer.Core.Student", "Student")
                        .WithMany("Projects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("NLayer.Core.ProjectFeature", b =>
                {
                    b.HasOne("NLayer.Core.Project", "Project")
                        .WithOne("ProjectFeature")
                        .HasForeignKey("NLayer.Core.ProjectFeature", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("NLayer.Core.Project", b =>
                {
                    b.Navigation("ProjectFeature")
                        .IsRequired();
                });

            modelBuilder.Entity("NLayer.Core.Student", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
