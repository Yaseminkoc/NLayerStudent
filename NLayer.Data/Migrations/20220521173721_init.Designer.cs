// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220521173721_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Schools", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 5, 21, 20, 37, 20, 692, DateTimeKind.Local).AddTicks(4719),
                            Name = "MCBÜ",
                            NumberOfStudents = 35000
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 5, 21, 20, 37, 20, 692, DateTimeKind.Local).AddTicks(4736),
                            Name = "MASKÜ",
                            NumberOfStudents = 35000
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 5, 21, 20, 37, 20, 692, DateTimeKind.Local).AddTicks(4737),
                            Name = "EGE",
                            NumberOfStudents = 65000
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 5, 21, 20, 37, 20, 692, DateTimeKind.Local).AddTicks(4738),
                            Name = "SAÜ",
                            NumberOfStudents = 45000
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yasemin",
                            SchoolId = 1,
                            Surname = "KOÇ"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yasin",
                            SchoolId = 1,
                            Surname = "SELEK"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Betül",
                            SchoolId = 2,
                            Surname = "YILMAZ"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "İrem",
                            SchoolId = 3,
                            Surname = "YALIN"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.StudentFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size = 170.0,
                            StudentId = 1,
                            Weight = 65.0
                        },
                        new
                        {
                            Id = 2,
                            Size = 165.0,
                            StudentId = 3,
                            Weight = 60.0
                        },
                        new
                        {
                            Id = 3,
                            Size = 159.0,
                            StudentId = 2,
                            Weight = 55.0
                        },
                        new
                        {
                            Id = 4,
                            Size = 150.0,
                            StudentId = 4,
                            Weight = 45.0
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Student", b =>
                {
                    b.HasOne("NLayer.Core.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("NLayer.Core.Models.StudentFeature", b =>
                {
                    b.HasOne("NLayer.Core.Models.Student", "Student")
                        .WithOne("StudentFeature")
                        .HasForeignKey("NLayer.Core.Models.StudentFeature", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("NLayer.Core.Models.School", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("NLayer.Core.Models.Student", b =>
                {
                    b.Navigation("StudentFeature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
